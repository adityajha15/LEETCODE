/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if(head==null || head.next==null)
        {
            return head;
        }
      ListNode current=head;
      ListNode ptr=null;
      int l=0;
      while(current!=null)
      {
        current=current.next;
        l++;
      }
      k=k%l;
      if(k==0)
      {
        return head;
      }
      current=head;
      int n=l-k;
      for(int i=0;i<n;i++)
      {
        ptr=current;
        current=current.next;
      }
      ListNode temp=current;
      while(current.next!=null)
      {
        current=current.next;
      }
      ptr.next=null;
      current.next=head;
      return temp;
    }
}
