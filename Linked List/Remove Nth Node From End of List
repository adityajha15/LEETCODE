/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
       if(head==null || head.next==null)
       {
        return null;
       }
        ListNode current=head;
        ListNode ptr=null;
        int l=0;
        while(current!=null)
        {
            current=current.next;
            l++;
        }
        if(n==l)
        {
            return head.next;
        }
        if(n==0)
        {
            return head;
        }
        int k=l-n;
        current=head;
        for(int i=0;i<k;i++)
        {
            ptr=current;
            current=current.next;
        }
        ptr.next=ptr.next.next;
        return head;
    }
}
