class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
       int m=matrix.length;
       int n=matrix[0].length;
       int startR=0,endR=matrix.length-1;
       while(startR<=endR)
       {
        int midR=(startR+endR)/2;
        if(target>=matrix[midR][0] && target<=matrix[midR][n-1])
        {
            return search(matrix,midR,target);
        }
        else if(target>matrix[midR][n-1])
        {
            startR=midR+1;
        }
        else
        {
            endR=midR-1;
        }
       }
       return false;
    }
    public boolean search(int matrix[][],int row,int target)
    {
        int n=matrix[0].length;
        int start=0,end=n-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(target==matrix[row][mid])
            {
                return true;
            }
            else if(target>matrix[row][mid])
            {
                start=mid+1;
            }
            else
            {
                end=mid-1;
            }
        }
        return false;
    }
}
