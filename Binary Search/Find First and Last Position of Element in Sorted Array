class Solution {
    public int[] searchRange(int[] nums, int target) {
      int left=leftSearch(nums,target);
      int right=rightSearch(nums,target);
      return new int[]{left,right};
    }
    public int leftSearch(int nums[],int target)
    {
        int n=nums.length;
        int start=0,end=n-1;
        int index=-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(target>nums[mid])
            {
                start=mid+1;
            }
            else if(nums[mid]>target)
            {
                end=mid-1;
            }
            else
            {
                index=mid;
                end=mid-1;
            }
        }
        return index;
    }
    public int rightSearch(int nums[],int target)
    {
        int n=nums.length;
        int start=0,end=n-1;
        int index=-1;
        while(start<=end)
        {
            int mid=(start+end)/2;
            if(nums[mid]<target)
            {
                start=mid+1;
            }
            else if(nums[mid]>target)
            {
                end=mid-1;
            }
            else
            {
                index=mid;
                start=mid+1;
            }
        }
        return index;
    }
}
